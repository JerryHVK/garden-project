// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        Int       @default(autoincrement()) @id
  email     String    @unique @db.VarChar(255)
  name      String    @db.VarChar(100)
  password  String    @db.VarChar(255)
  address   String?   @db.Text
  gardens   Garden[]
  role      Role      @default(USER)
  imageUrl  String?   @db.Text
  locked    Boolean   @default(false)
}

enum Role {
  USER
  ADMIN
}

model Garden{
  id          Int     @default(autoincrement()) @id
  name        String  @db.VarChar(255)
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int     
  vegetables  Vegetable[]
  sales       Sale[]
  sensorData  SensorData[]
}

model Vegetable{
  id          Int     @default(autoincrement()) @id
  name        String  @db.VarChar(100)
  inQuantity  Int?     
  saleQuantity Int?
  price       Float?     
  sales       Sale[]
  garden      Garden  @relation(fields: [gardenId], references: [id], onDelete: Cascade)
  gardenId    Int
  imageUrl    String? @db.Text
}

model Sale{
  id          Int     @default(autoincrement()) @id
  quantity  Int?   
  totalPrice  Float?   
  time        DateTime  @default(now())
  vegetable   Vegetable @relation(fields: [vegetableId], references: [id], onDelete: Cascade)
  vegetableId Int
  garden      Garden @relation(fields: [gardenId], references: [id], onDelete: Cascade)
  gardenId    Int
}

model SensorData{
  id            Int     @default(autoincrement()) @id
  temperature   Float
  humidity      Float
  time          DateTime  @default(now())
  garden        Garden @relation(fields: [gardenId], references: [id], onDelete: Cascade)
  gardenId      Int
}