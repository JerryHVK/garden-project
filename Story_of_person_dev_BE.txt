Mình đang học cách làm BE, và dần minh thấy có những vấn đề ở đây.

1. Sự hài hòa giữa FE và BE
- Tất nhiên thì mình muốn tách ra: FE có như này, BE có như này, và sẽ thật tuyệt nếu hoàn toàn như thế
- Nhưng rõ ràng, FE có phụ thuộc ít nhiều vào BE, và ngược lại.

Thứ người dùng thấy là FE, thứ liên quan đến họ là sản phẩm, UI/UX

2. Sự đảm bảo từ BE
a. Từ vị trí của dev:
- BE cần code thoáng, code dễ hiểu, code tường minh nhất có thể, để đảm bảo là mình hiểu code, và người khác khi đọc vào hay làm tiếp cái code này cũng hiểu được
- Code cấu trúc tốt, rõ ràng

b. Từ vị trí của người dùng, mà cũng không hẳn:
- Xử lí của BE cần nhanh, cần hạn chế lỗi
- Xử lí của BE cần có giới hạn để lọc đi những request có khả năng làm BE "cháy máy"
- Chẳng hạn như findMany thì 1 lần request hiện ra limit là 10 cái thôi, kiểu thế
- Những giới hạn đặt ra như vậy, giúp BE hoạt động ổn định, tránh lỗi, tránh quá tải, tóm lại là: Lâu dài và Ổn định
- Đó là điều mà mình muốn hướng đến, và mình nghĩ còn gì tuyệt vời hơn khi có thứ có thể chạy được lâu dài và ổn định, sẽ ít công sức bảo trì hơn, nên sẽ ít kinh phí hơn, tiết kiệm thời gian

3. Câu chuyện hiển thị dữ liệu
- Tất nhiên thì hiển thị là việc của FE, những không có nghĩa là BE không chịu trách nhiệm
- Ngược lại, BE còn chiụ trách nhiệm rất lớn là đằng khác. Dữ liệu trả về cho FE phải đầy đủ, nhưng phải hạn chế thừa, vì những điều thừa có khả năng gây hại cho hệ thống, và cũng có thể gây quá tải cho hệ thống
- Vậy nên, thông tin nào không cần thì nên ẩn đi, thậm chí không truy vấn

4. Tất nhiên, mình không phải thần
- Như tiêu đề của mục, "mình không phải thần", không thể nào mà cái gì cũng có thể đảm bảm, cũng có thể đòi hỏi được
- Mình làm tốt nhất với những gì mình có hiện tại, tập trung vào những điều quan trọng
- Mình sẽ luôn có giới hạn về thời gian, giới hạn về công sức, giới hạn về sự tập trung, mình luôn có những giới hạn và nên đặt ra giới hạn
- Những giới hạn đảm bảo những kế hoạch, dự định sẽ không bị tràn, đảm bảo sự ổn định, an toàn cho mình, cho tiến độ của mình, cho project của mình, cho sản phẩm của mình
- Biết mình có hạn, hiểu mình có hạn để luôn ưu tiên nhũng điều quan trọng nhất.